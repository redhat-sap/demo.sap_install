---
####################################################
#
# Phase 2: Basic OS Setup
#
# This playbook covers the following configuration steps
#  - subscription and repositories
#  - network setup
#  - storage customization

# For our demo, we do not need to install additional packages,
# configure special services, monitoring and backup etc.
# we are good with what the standard image provides

# We need to provide this script the storage configuration
# for each machine. Hence we need to extend the dictionary "server_def"
# with its individual storage configuration for the second disk, e.g.:

#   server_def:
#           - name: server-name
#             [...]
#             storage_pools:
#               - name: volume_name
#                 disks:
#                  - sdb
#                 volumes:
#                   - name: data
#                     size: "128 GiB"
#                     mount_point: "/hana/data"
#                     fs_type: xfs
#                     state: present
#                   - name: log
#                     size: "64 GiB"
#                     mount_point: "/hana/log"
#                     fs_type: xfs
#                     state: present

# Have a look at the documention of the storage role for more configuration options

- name: Ensure Servers are booted and reachable
  hosts: hanas, s4hanas
  gather_facts: false
  become: false
  tasks:
    - name: Wait for SSH to come up
      ansible.builtin.wait_for:
        host: "{{ ansible_host }}"
        port: 22
        delay: 10
        state: started
        timeout: 480
      delegate_to: localhost

- name: Phase 2 - basic OS Setup
  hosts: hanas, s4hanas
  become: true

  # Default variables for the playbooks can be set here
  # and can be overwritten in the template file
  vars:
    reg_activation_key: "{{ sap_rhsm_activationkey }}"
    reg_organization_id: "{{ sap_rhsm_org_id }}"
    reg_osrelease: 8.6
    repositories:
      - { name: rhel-8-for-x86_64-baseos-e4s-rpms, state: enabled }
      - { name: rhel-8-for-x86_64-appstream-e4s-rpms, state: enabled }
      - { name: rhel-8-for-x86_64-sap-solutions-e4s-rpms, state: enabled }
      - { name: rhel-8-for-x86_64-sap-netweaver-e4s-rpms, state: enabled }
      - { name: rhel-8-for-x86_64-highavailability-e4s-rpms, state: enabled }
    system_roles: fedora.linux_system_roles

  tasks:
# Old roles are deprecated. Need to replace by rhc
#    - name: Ensure Correct subscription and repositories
#      include_role:
#        name: mk-ansible-roles.subscribe_rhn

    - name: Ensure Correct subscription and repositories
      ansible.builtin.include_role:
        name: "{{ system_roles + '.rhc' }}"
      vars:
        rhc_auth:
          activation_keys:
            keys:
              - "{{ sap_rhsm_activationkey }}"
        rhc_organization: "{{ sap_rhsm_org_id }}"
        rhc_repositories: "{{ repositories }}"
        rhc_release: "{{ reg_osrelease }}"
        rhc_state: "{{ presnt }}"
        rhc_insights:
          state: absent
      tags:
        - rhn_registration

    # This picks the correct storage configuration for host inventory_hostname out of the server_def dict
    - name: Get storage pool setup from server definition
      ansible.builtin.set_fact:
        storage_pools: "{{ server_def | selectattr('name', 'equalto', inventory_hostname) | sum(attribute='storage_pools', start=[]) }}"
      tags:
        - storage_setup

    - name: Ensure storage is configured correctly
      ansible.builtin.include_role:
        name: "{{ system_roles + '.storage' }}"
      tags:
        - storage_setup

    - name: NFS/CIFS client is installed
      ansible.builtin.dnf:
        name:
          - nfs-utils
          - cifs-utils
        state: present
      tags:
        - software_mount

    - name: Ensure Mountpoint exists
      ansible.builtin.file:
        path: "{{ nfs_software_archive_dir }}"
        state: directory
        mode: '0755'
      tags:
        - software_mount

    - name: Ensure Software is mounted from file server
      ansible.posix.mount:
        src: "{{ fs_software_archive_srv | d(nfs_software_archive_srv) }}"
        path: "{{ fs_software_archive_dir | d(fs_software_archive_dir) }}"
        opts: "{{ fs_mount_opts | d('rw,sync,hard,noatime') }}"
        fstype: "{{ fs_filetype |Â d('nfs') }}"
        state: present
      tags:
        - software_mount

    # VMWare image provisioning may leave an unusal /etc/hosts entry, that needs to be removed
    # Otherwise it impacts deployment negatively
    - name: Ensure VMware localhost entry is removed from /etc/hosts
      ansible.builtin.lineinfile:
        path: /etc/hosts
        state: absent
        regexp: '127.0.1.1\t{{ ansible_hostname }}.*'
