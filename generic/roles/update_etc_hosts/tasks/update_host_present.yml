---
# TODO CHECK/SET Variables
- name: Verify that variable node_ip is set
  ansible.builtin.assert:
    that: not( ( thishost.node_ip is undefined) or ( thishost.node_ip is none) or ( thishost.node_ip | trim == '') )
    msg: "Variable 'node_ip' is undefined or empty. Please define it your host list"

- name: Verify that variable node_ip is in the correct format
  ansible.builtin.assert:
    that: thisnode.node_ip is ansible.utils.ip
    msg: "Variable 'node_ip' is not an IP adress. Please use the correct format"

- name: Verify that variable node_name is set
  ansible.builtin.assert:
    that: not( ( thishost.node_name is undefined) or ( thishost.node_name is none) or ( thishost.node_name | trim == '') )
    msg: "Variable 'node_name' is undefined or empty. Please define it your host list"

- name: Ensure node_domain is set
  ansible.builtin.set_fact:
    __update_etc_hosts_domain: "{{ thishost.node_domain | default(sap_domain | default(ansible_domain)) }}"

- name: Verify that variable domain_name is set
  ansible.builtin.assert:
    that: >
      not( ( __update_etc_hosts_domain is undefined) or
      ( __update_etc_hosts_domain is none) or
      ( __update_etc_hosts_domain | trim == '') )
    msg: "Variable 'node_name' is undefined or empty. Please define it your host list"

- name: Set default values
  ansible.builtin.set_fact:
    __update_etc_hosts_comment: "{{ ( thishost.comment|d('') + ' ' + thishost.hana_site|d('') ) | trim }}"
    __update_etc_hosts_alias_mode: "{{ thishost.alias_mode | default('merge') }}"

- name: Prepend Hashtag to comment
  when: __update_etc_hosts_comment|length > 0
  ansible.builtin.set_fact:
    __update_etc_hosts_comment: "# {{ __update_etc_hosts_comment }}"

- name: merge existing aliases with new alis list
  when: __update_etc_hosts_alias_mode != "overwrite"
  block:
    - name: Get all existing hostname aliases of {{ thishost.node_ip }}
      ansible.builtin.shell: |
        awk '( $1 == "{{ thishost.node_ip }}" ) {
          for (i=2; i<=NF; ++i) {
            if ( $i == "#" ) { break }
            if (( $i != "{{ thishost.node_name }}" ) && ( $i != "{{ thishost.node_name }}.{{ __update_etc_hosts_domain }}" )) { printf " "$i }
          }
        }' "{{ __update_etc_hosts_file }}"
      register: __update_etc_hosts_register_aliases
      changed_when: false
    - name: Add defined aliases
      ansible.builtin.set_fact:
        __update_etc_hosts_aliases: "{{ __update_etc_hosts_register_aliases.stdout.split(' ') + thishost.node_aliases|d([])|unique|join(' ') }}"

- name: Overwrite existing aliases
  when: __update_etc_hosts_alias_mode == "overwrite"
  ansible.builtin.set_fact:
    __update_etc_hosts_aliases: "{{ thishost.node_aliases|d([])|unique|join(' ') }}"

- name: Display host and domain name, and IP address before the modification
  ansible.builtin.debug:
    msg:
      - "hostname = {{ thishost.node_name }}"
      - "domain   = {{ __update_etc_hosts_domain }}"
      - "ip       = {{ thishost.node_ip }}"
      - "comment  = {{ __update_etc_hosts_comment }}"
      - "aliases  = {{ __update_etc_hosts_aliases }}"
      - "alias mode = {{ __update_etc_hosts_alias_mode }}"

# We allow more than one line containing sap_ip:
- name: Check for duplicate entries of {{ thishost.node_ip }}
  ansible.builtin.shell: |
    n=$(grep "^{{ thishost.node_ip }}\s" {{ __update_etc_hosts_file }} | wc -l)
    if [ $n -gt 1 ]; then
      echo "Duplicate IP entry in {{ __update_etc_hosts_file }}!"
      exit 1
    else
      exit 0
    fi
  register: __update_etc_hosts_register_duplicate_ip_check
  changed_when: false
  ignore_errors: yes
  when: not ansible_check_mode

- name: Report if there is more than one line with the IP address
  ansible.builtin.debug:
    msg:
      - "More than one line containing {{ thishost.node_ip }}. File {{ __update_etc_hosts_file }} will not be modified."
  when:
    - not ansible_check_mode
    - __update_etc_hosts_register_duplicate_ip_check.stdout == 'Duplicate IP entry in {{ __update_etc_hosts_file }}!'

- name: Ensure that the entry in hosts file is correct
  ansible.builtin.lineinfile:
    path: "{{ __update_etc_hosts_file }}"
    regexp: '^{{ thishost.node_ip }}\s'
    line: "{{ thishost.node_ip }} {{ thishost.node_name }}.{{ __update_etc_hosts_domain }} {{ thishost.node_name }} {{ __update_etc_hosts_aliases }} {{ __update_etc_hosts_comment }}"
    backup: yes
  when:
    - not ansible_check_mode
    - __update_etc_hosts_register_duplicate_ip_check.stdout != 'Duplicate IP entry in {{ __update_etc_hosts_file }}!'

- name: Check for duplicate or missing entries of hostname and fqdn in {{ __update_etc_hosts_file }}
  ansible.builtin.shell: |
    n=$(awk 'BEGIN{a=0}/^{{ line_item }}\s/||/\s{{ line_item }}\s/||/\s{{ line_item }}$/{a++}END{print a}' {{ __update_etc_hosts_file }})
    if [ $n -eq 1 ]; then
      exit 0
    else
      exit 1
    fi
  loop:
    - '{{ thishost.node_name }}.{{ __update_etc_hosts_domain }}'
    - '{{ thishost.node_name }}'
  changed_when: false
  loop_control:
    loop_var: line_item
  when: not ansible_check_mode

- name: Check if ipv4 address, FQDN, and hostname are in {{ __update_etc_hosts_file }}
  block:
    - name: Perform the hosts file completeness check
      ansible.builtin.command: awk 'BEGIN{a=0}/{{ thishost.node_ip }}/&&/{{ thishost.node_name }}.{{ __update_etc_hosts_domain }}/&&/{{ thishost.node_name }}/{a++}END{print a}' {{ __update_etc_hosts_file }}
      register: __update_etc_hosts_register_ipv4_fqdn_sap_hostname_once_check
      changed_when: false

    - name: Display the output of the hosts file completeness check
      ansible.builtin.debug:
        var: __update_etc_hosts_register_ipv4_fqdn_sap_hostname_once_check.stdout_lines,
              __update_etc_hosts_register_ipv4_fqdn_sap_hostname_once_check.stderr_lines

    - name: Display the expected output of the hosts file completeness check
      ansible.builtin.debug:
        msg:
          - "Expected:"
          - "{{ thishost.node_ip }} {{ thishost.node_name }}.{{ __update_etc_hosts_domain }} {{ thishost.node_name }}"
      when:
        - __update_etc_hosts_register_ipv4_fqdn_sap_hostname_once_check.stdout != "1"

    - name: Fail if ip4 address, FQDN, or hostname are not in hosts file
      ansible.builtin.fail:
        msg:
          - "Server's ip4 address, FQDN, or hostname are not in {{ __update_etc_hosts_file }}!"
          - "Expected:"
          - "{{ thishost.node_ip }} {{ thishost.node_name }}.{{ __update_etc_hosts_domain }} {{ thishost.node_name }}"
      when:
        - __update_etc_hosts_register_ipv4_fqdn_sap_hostname_once_check.stdout != "1"
      ignore_errors: "{{ ansible_check_mode }}"
